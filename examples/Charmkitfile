# -*- mode:ruby -*-

depends_on "nginx-full"
depends_on "php-fpm"
depends_on "php-cgi"
depends_on "php-curl"
depends_on "php-gd"
depends_on "php-json"
depends_on "php-mcrypt"
depends_on "php-readline"
depends_on "php-mbstring"
depends_on "php-xml"

hook "install" do
  release = "#{config['release']}-release"
  app_path = config 'app_path'
  hook_path = ENV['JUJU_CHARM_DIR']
  run "tar xf #{resource[release]} -C #{app_path} --strip-components=1"
  rm "#{app_path}/conf/install.php" if is_file? "#{app_path}/conf/install.php"
  cp "#{hook_path}/templates/acl.auth.php", "#{app_path}/conf/acl.auth.php"
  cp "#{hook_path}/templates/local.php", "#{app_path}/conf/local.php"
  cp "#{hook_path}/templates/plugins.local.php", "#{app_path}/conf/plugin.local.php"
  file "/etc/dokuwiki-release", content: release
  case release
  when "stable"
    version = cat "#{app_path}/VERSION"
    run "application-version-set '#{version}'"
  when "development"
    t = Time.now
    version = t.strftime "%Y-%m-%d"
    run "application-version-set 'development-#{version}'"
  else
    status :blocked, "Unable to set proper application version"
    exit 1
  end
end

hook "config-changed" do
  app_path = config 'app_path'
  hook_path = ENV['JUJU_CHARM_DIR']
  installed_release = cat "/etc/dokuwiki-release"
  release = config 'release'
  if !installed_release.eql? release
    run './hooks/install'
  end

  admin_user = config 'admin_user'
  admin_password = config 'admin_password'
  admin_name = config 'admin_name'
  admin_email = config 'admin_email'
  template "#{hook_path}/templates/users.auth.php",
           "#{app_path}/conf/users.auth.php",
           admin_user: admin_user,
           admin_password: admin_password,
           admin_name: admin_name,
           admin_email: admin_email

  template "#{hook_path}/templates/vhost.conf",
           "/etc/nginx/sites-enabled/default",
           public_address: unit['public-address'],
           app_path: app_path

  chown_R 'www-data', 'www-data', app_path
  run "systemctl restart nginx"
  status :active, "Ready"
end
